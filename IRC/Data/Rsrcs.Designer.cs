//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BestChat.IRC.Data {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Rsrcs.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Rsrcs {
        
        private static global::System.Rsrcs.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Rsrcs() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Rsrcs.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Rsrcs.ResourceManager temp = new global::System.Rsrcs.ResourceManager("BestChat.IRC.Data.Rsrcs", typeof(Rsrcs).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user {0} was banned from the channel by {1}..
        /// </summary>
        internal static string strActionEventTypeBanOfUserDesc {
            get {
                return ResourceManager.GetString("strActionEventTypeBanOfUserDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The modes {0} were just added to the channel while modes {1} were removed..
        /// </summary>
        internal static string strActionEventTypeChanModeAddedAndRemovedDesc {
            get {
                return ResourceManager.GetString("strActionEventTypeChanModeAddedAndRemovedDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The modes {0} were just added to the channel..
        /// </summary>
        internal static string strActionEventTypeChanModeAddedDesc {
            get {
                return ResourceManager.GetString("strActionEventTypeChanModeAddedDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The modes {0} were just removed from the channel..
        /// </summary>
        internal static string strActionEventTypeChanModeRemovedDesc {
            get {
                return ResourceManager.GetString("strActionEventTypeChanModeRemovedDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user {0} has just joined the channel..
        /// </summary>
        internal static string strActionEventTypeJoinDesc {
            get {
                return ResourceManager.GetString("strActionEventTypeJoinDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user {0} was kicked from the channel by {1}..
        /// </summary>
        internal static string strActionEventTypeKickOfUserDesc {
            get {
                return ResourceManager.GetString("strActionEventTypeKickOfUserDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user formerly known as {0} is now known as {1}..
        /// </summary>
        internal static string strActionEventTypeNickOfUserChangedDesc {
            get {
                return ResourceManager.GetString("strActionEventTypeNickOfUserChangedDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user {0} just left the channel..
        /// </summary>
        internal static string strActionEventTypePartDesc {
            get {
                return ResourceManager.GetString("strActionEventTypePartDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user {0} was quieted in the channel by {1}..
        /// </summary>
        internal static string strActionEventTypeQuietOfUserDesc {
            get {
                return ResourceManager.GetString("strActionEventTypeQuietOfUserDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user {0} just left the network {1} of which this channel is part of..
        /// </summary>
        internal static string strActionEventTypeQuitDesc {
            get {
                return ResourceManager.GetString("strActionEventTypeQuitDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to YOU have joined the channel {0}..
        /// </summary>
        internal static string strActionEventTypeSelfJoinDesc {
            get {
                return ResourceManager.GetString("strActionEventTypeSelfJoinDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The topic for {0} has been changed to “{1}” by {2} at {3}..
        /// </summary>
        internal static string strActionEventTypeTopicChangedDesc {
            get {
                return ResourceManager.GetString("strActionEventTypeTopicChangedDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user {0} was unbanned from the channel by {1}..
        /// </summary>
        internal static string strActionEventTypeUnbanOfUserDesc {
            get {
                return ResourceManager.GetString("strActionEventTypeUnbanOfUserDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {1} is now permitting {0} to talk again in the channel..
        /// </summary>
        internal static string strActionEventTypeUnquietOfUserDesc {
            get {
                return ResourceManager.GetString("strActionEventTypeUnquietOfUserDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user {0} just revoked half-op status from the user {1}..
        /// </summary>
        internal static string strActionEventTypeUserDehalfOppedDesc {
            get {
                return ResourceManager.GetString("strActionEventTypeUserDehalfOppedDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user {0} just revoked op status from the user {1}..
        /// </summary>
        internal static string strActionEventTypeUserDeoppedDesc {
            get {
                return ResourceManager.GetString("strActionEventTypeUserDeoppedDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user {0} just lost voice in this channel.  This action was taken by {1}..
        /// </summary>
        internal static string strActionEventTypeUserDevoicedDesc {
            get {
                return ResourceManager.GetString("strActionEventTypeUserDevoicedDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user {0} just issued half-op status to the user {1}..
        /// </summary>
        internal static string strActionEventTypeUserHalfOppedDesc {
            get {
                return ResourceManager.GetString("strActionEventTypeUserHalfOppedDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user {0} just issued op status to the user {1}..
        /// </summary>
        internal static string strActionEventTypeUserOppedDesc {
            get {
                return ResourceManager.GetString("strActionEventTypeUserOppedDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user {0} just gained voice in this channel.  This action was taken by {1}..
        /// </summary>
        internal static string strActionEventTypeUserVoicedDesc {
            get {
                return ResourceManager.GetString("strActionEventTypeUserVoicedDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Off.
        /// </summary>
        internal static string strBoolModeStateOffDesc {
            get {
                return ResourceManager.GetString("strBoolModeStateOffDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to On.
        /// </summary>
        internal static string strBoolModeStateOnDesc {
            get {
                return ResourceManager.GetString("strBoolModeStateOnDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is an IRC channel on the network {1}..
        /// </summary>
        internal static string strChanNameDescForTree {
            get {
                return ResourceManager.GetString("strChanNameDescForTree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AtTheme.
        /// </summary>
        internal static string strChanServOptAtTheme {
            get {
                return ResourceManager.GetString("strChanServOptAtTheme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ChanServ is implemented by AtTheme.  Only select this if you&apos;re sure that&apos;s what they use..
        /// </summary>
        internal static string strChanServOptAtThemeToolTip {
            get {
                return ResourceManager.GetString("strChanServOptAtThemeToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None available.
        /// </summary>
        internal static string strChanServOptNull {
            get {
                return ResourceManager.GetString("strChanServOptNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select this if the network doesn&apos;t have ChanServ.
        /// </summary>
        internal static string strChanServOptNullToolTip {
            get {
                return ResourceManager.GetString("strChanServOptNullToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Available, but type unknown.
        /// </summary>
        internal static string strChanServOptUnknown {
            get {
                return ResourceManager.GetString("strChanServOptUnknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select this if the network has a ChanServ, but you don&apos;t know much about it.
        /// </summary>
        internal static string strChanServOptUnknownToolTip {
            get {
                return ResourceManager.GetString("strChanServOptUnknownToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All your channels on this IRC network are here..
        /// </summary>
        internal static string strConversationGroupChannelsDesc {
            get {
                return ResourceManager.GetString("strConversationGroupChannelsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Anytime you PM another user, a service, or a bot on this network, that conversation will show up here..
        /// </summary>
        internal static string strConversationGroupRemoteUsersDesc {
            get {
                return ResourceManager.GetString("strConversationGroupRemoteUsersDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Channels.
        /// </summary>
        internal static string strConversationGroupTypeChannels {
            get {
                return ResourceManager.GetString("strConversationGroupTypeChannels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Users.
        /// </summary>
        internal static string strConversationGroupTypeRemoteUsers {
            get {
                return ResourceManager.GetString("strConversationGroupTypeRemoteUsers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to join throttling to be sent to another channel..
        /// </summary>
        internal static string strDefChanModeForwardDesc {
            get {
                return ResourceManager.GetString("strDefChanModeForwardDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the name of the channel you want the forward to go to..
        /// </summary>
        internal static string strDefChanModeForwardDestParamDesc {
            get {
                return ResourceManager.GetString("strDefChanModeForwardDestParamDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Destination.
        /// </summary>
        internal static string strDefChanModeForwardDetParamName {
            get {
                return ResourceManager.GetString("strDefChanModeForwardDetParamName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This mode causes the channel to be invite only.  People must get an invite via either the ChanServ/Q&apos;s invite function or the |/invite| command..
        /// </summary>
        internal static string strDefChanModeInviteOnlyDesc {
            get {
                return ResourceManager.GetString("strDefChanModeInviteOnlyDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setting a key requires anyone who wants to join to enter a key in order to join..
        /// </summary>
        internal static string strDefChanModeKeyDesc {
            get {
                return ResourceManager.GetString("strDefChanModeKeyDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the key for this channel.
        /// </summary>
        internal static string strDefChanModeKeyParamDesc {
            get {
                return ResourceManager.GetString("strDefChanModeKeyParamDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key.
        /// </summary>
        internal static string strDefChanModeKeyParamName {
            get {
                return ResourceManager.GetString("strDefChanModeKeyParamName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When this mode is on, only users with op, half-op, or voice may talk in the channel..
        /// </summary>
        internal static string strDefChanModeModDesc {
            get {
                return ResourceManager.GetString("strDefChanModeModDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This mode causes colors to be stripped.
        /// </summary>
        internal static string strDefChanModeNoColorDesc {
            get {
                return ResourceManager.GetString("strDefChanModeNoColorDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This mode prevents messages from being set from outside the channel.  When set, users or bots must be in the channel to post..
        /// </summary>
        internal static string strDefChanModeNoExternMsgDesc {
            get {
                return ResourceManager.GetString("strDefChanModeNoExternMsgDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When this mode is set, all posts from anyone without voice or op privileges are sent to ops instead of the channel as a whole..
        /// </summary>
        internal static string strDefChanModeOpsModDesc {
            get {
                return ResourceManager.GetString("strDefChanModeOpsModDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Private channels disable |/knock|..
        /// </summary>
        internal static string strDefChanModePrivateDesc {
            get {
                return ResourceManager.GetString("strDefChanModePrivateDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This mode, when set, prevents users who aren&apos;t registered from joining.  If you set this, be sure to set a forwarding location with &apos;f&apos;..
        /// </summary>
        internal static string strDefChanModeRegisteredUserOnlyDesc {
            get {
                return ResourceManager.GetString("strDefChanModeRegisteredUserOnlyDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If this mode is set, the channel won&apos;t be listed in |/whois| or |/list|..
        /// </summary>
        internal static string strDefChanModeSecretDesc {
            get {
                return ResourceManager.GetString("strDefChanModeSecretDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This mode prevents changes to the topic by users who aren&apos;t ops or half ops.  Note: Services like ChanServ or Q may prevent such topic changes even if this mode is off..
        /// </summary>
        internal static string strDefChanModeTopicLockDesc {
            get {
                return ResourceManager.GetString("strDefChanModeTopicLockDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Designates this client as “invisible”..
        /// </summary>
        internal static string strDefUserModeInvisibleDesc {
            get {
                return ResourceManager.GetString("strDefUserModeInvisibleDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Designates the user as a IRC operator.  Use |/oper| to obtain this..
        /// </summary>
        internal static string strDefUserModeIrcOpDesc {
            get {
                return ResourceManager.GetString("strDefUserModeIrcOpDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prevents users not in your |/accept| list from messaging you and inviting you to channels.
        /// </summary>
        internal static string strDefUserModeMsgRestrictDesc {
            get {
                return ResourceManager.GetString("strDefUserModeMsgRestrictDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prevent users not on your |/accept| list and not in a channel with you from messaging you or inviting you to channels.  This is a softer form of +g..
        /// </summary>
        internal static string strDefUserModeMsgRestrictSoftDesc {
            get {
                return ResourceManager.GetString("strDefUserModeMsgRestrictSoftDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prevents unidentified users that you haven&apos;t accepted from messaging you..
        /// </summary>
        internal static string strDefUserModeRestrictMsgUnidentUsersDesc {
            get {
                return ResourceManager.GetString("strDefUserModeRestrictMsgUnidentUsersDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can see wallops.
        /// </summary>
        internal static string strDefUserModeWallopsDesc {
            get {
                return ResourceManager.GetString("strDefUserModeWallopsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to False / Not Available.
        /// </summary>
        internal static string strHasAlisFalse {
            get {
                return ResourceManager.GetString("strHasAlisFalse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No ALIS is present on this network.
        /// </summary>
        internal static string strHasAlisFalseToolTip {
            get {
                return ResourceManager.GetString("strHasAlisFalseToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to True / Available.
        /// </summary>
        internal static string strHasAlisTrue {
            get {
                return ResourceManager.GetString("strHasAlisTrue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ALIS is available and ready to use..
        /// </summary>
        internal static string strHasAlisTrueToolTip {
            get {
                return ResourceManager.GetString("strHasAlisTrueToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown.
        /// </summary>
        internal static string strHasAlisUnknown {
            get {
                return ResourceManager.GetString("strHasAlisUnknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ALIS may or may not be present.
        /// </summary>
        internal static string strHasAlisUnknownToolTip {
            get {
                return ResourceManager.GetString("strHasAlisUnknownToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to False / Not Available.
        /// </summary>
        internal static string strHasQFalse {
            get {
                return ResourceManager.GetString("strHasQFalse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Q present on this network.  Q is really only QuakeNet..
        /// </summary>
        internal static string strHasQFalseToolTip {
            get {
                return ResourceManager.GetString("strHasQFalseToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to True / Available.
        /// </summary>
        internal static string strHasQTrue {
            get {
                return ResourceManager.GetString("strHasQTrue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Q is present.
        /// </summary>
        internal static string strHasQTrueToolTip {
            get {
                return ResourceManager.GetString("strHasQTrueToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown.
        /// </summary>
        internal static string strHasQUnknown {
            get {
                return ResourceManager.GetString("strHasQUnknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Q might or might not be present on this network.
        /// </summary>
        internal static string strHasQUnknownToolTip {
            get {
                return ResourceManager.GetString("strHasQUnknownToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Holds preferences for the Internet Relay Chat protocol.  Items under here are the network you&apos;ve connected to in the past.  These settings don&apos;t include how to connect to those networks or how to log into it.  For those, see the network list editor..
        /// </summary>
        internal static string strIrcLongDesc {
            get {
                return ResourceManager.GetString("strIrcLongDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IRC.
        /// </summary>
        internal static string strIrcName {
            get {
                return ResourceManager.GetString("strIrcName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log in manually.
        /// </summary>
        internal static string strManual {
            get {
                return ResourceManager.GetString("strManual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom/User defined.
        /// </summary>
        internal static string strNetworkInfoTypeCustom {
            get {
                return ResourceManager.GetString("strNetworkInfoTypeCustom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A network created by the user and not based on another network..
        /// </summary>
        internal static string strNetworkInfoTypeCustomToolTipText {
            get {
                return ResourceManager.GetString("strNetworkInfoTypeCustomToolTipText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hidden.
        /// </summary>
        internal static string strNetworkInfoTypeHidden {
            get {
                return ResourceManager.GetString("strNetworkInfoTypeHidden", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A network provided by Best Chat, but the user has chosen to hide the network from views.
        /// </summary>
        internal static string strNetworkInfoTypeHiddenToolTipText {
            get {
                return ResourceManager.GetString("strNetworkInfoTypeHiddenToolTipText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Modified.
        /// </summary>
        internal static string strNetworkInfoTypeModified {
            get {
                return ResourceManager.GetString("strNetworkInfoTypeModified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A network whose information was originally provided by Best Chat, but the user has made changes..
        /// </summary>
        internal static string strNetworkInfoTypeModifiedToolTipText {
            get {
                return ResourceManager.GetString("strNetworkInfoTypeModifiedToolTipText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Predefined.
        /// </summary>
        internal static string strNetworkInfoTypePredefined {
            get {
                return ResourceManager.GetString("strNetworkInfoTypePredefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A network whose information is provided by Best Chat and hasn&apos;t been changed..
        /// </summary>
        internal static string strNetworkInfoTypePredefinedToolTipText {
            get {
                return ResourceManager.GetString("strNetworkInfoTypePredefinedToolTipText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Every channel join and user (or service/bot) you talk in the network “{0}” will be listed here..
        /// </summary>
        internal static string strNetworkNameDescForTree {
            get {
                return ResourceManager.GetString("strNetworkNameDescForTree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempt to use NickServ (Requires a network that provides NickServ).
        /// </summary>
        internal static string strNickServ {
            get {
                return ResourceManager.GetString("strNickServ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AtTheme.
        /// </summary>
        internal static string strNickServOptAtTheme {
            get {
                return ResourceManager.GetString("strNickServOptAtTheme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NickServ is implemented by AtTheme.  Only select this if you&apos;re sure that&apos;s what they use..
        /// </summary>
        internal static string strNickServOptAtThemeToolTip {
            get {
                return ResourceManager.GetString("strNickServOptAtThemeToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None available.
        /// </summary>
        internal static string strNickServOptNull {
            get {
                return ResourceManager.GetString("strNickServOptNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select this if the network doesn&apos;t have NickServ.
        /// </summary>
        internal static string strNickServOptNullToolTip {
            get {
                return ResourceManager.GetString("strNickServOptNullToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Available, but type unknown.
        /// </summary>
        internal static string strNickServOptUnknown {
            get {
                return ResourceManager.GetString("strNickServOptUnknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select this if the network has a NickServ, but you don&apos;t know much about it.
        /// </summary>
        internal static string strNickServOptUnknownToolTip {
            get {
                return ResourceManager.GetString("strNickServOptUnknownToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to connect to {0}..
        /// </summary>
        internal static string strNoticeEventTypeConnectionAttemptInProgressDesc {
            get {
                return ResourceManager.GetString("strNoticeEventTypeConnectionAttemptInProgressDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Information.
        /// </summary>
        internal static string strNoticeEventTypeInfoName {
            get {
                return ResourceManager.GetString("strNoticeEventTypeInfoName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Channel.
        /// </summary>
        internal static string strOneChannel {
            get {
                return ResourceManager.GetString("strOneChannel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remote User.
        /// </summary>
        internal static string strOneRemoteUser {
            get {
                return ResourceManager.GetString("strOneRemoteUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to me.
        /// </summary>
        internal static string strPostActionMeDesc {
            get {
                return ResourceManager.GetString("strPostActionMeDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to say.
        /// </summary>
        internal static string strPostActionSayDesc {
            get {
                return ResourceManager.GetString("strPostActionSayDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Here you&apos;ll find all preferences for this “{0}”. Items under here are for channels and users you&apos;ve talked with directly..
        /// </summary>
        internal static string strPrefsForNetwork {
            get {
                return ResourceManager.GetString("strPrefsForNetwork", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is a remote user on the IRC network {1}..
        /// </summary>
        internal static string strRemoteUserDescForTree {
            get {
                return ResourceManager.GetString("strRemoteUserDescForTree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use SASL.
        /// </summary>
        internal static string strSASL {
            get {
                return ResourceManager.GetString("strSASL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ChanServ is preventing this mode from being set..
        /// </summary>
        internal static string strThreeWayModeStateForcedOff {
            get {
                return ResourceManager.GetString("strThreeWayModeStateForcedOff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ChanServ is ensuring this mode is set.
        /// </summary>
        internal static string strThreeWayModeStateLockedOnDesc {
            get {
                return ResourceManager.GetString("strThreeWayModeStateLockedOnDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ChanServ isn&apos;t controlling this mode.
        /// </summary>
        internal static string strThreeWayModeStateNoPrefDesc {
            get {
                return ResourceManager.GetString("strThreeWayModeStateNoPrefDesc", resourceCulture);
            }
        }
    }
}
