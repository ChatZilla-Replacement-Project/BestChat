//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BestChat.IRC.Data.Prefs {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Rsrcs {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Rsrcs() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BestChat.IRC.Data.Prefs.Rsrcs", typeof(Rsrcs).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lists custom command sets you can run as one..
        /// </summary>
        internal static string strGlobalAliasesDesc {
            get {
                return ResourceManager.GetString("strGlobalAliasesDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Aliases.
        /// </summary>
        internal static string strGlobalAliasesTitle {
            get {
                return ResourceManager.GetString("strGlobalAliasesTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter any alternate nicks that Best Chat should use if your normal nick isn&apos;t available.  You don&apos;t need to include your default nick..
        /// </summary>
        internal static string strGlobalAltNicksDesc {
            get {
                return ResourceManager.GetString("strGlobalAltNicksDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alterate Nicks.
        /// </summary>
        internal static string strGlobalAltNicksTitle {
            get {
                return ResourceManager.GetString("strGlobalAltNicksTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Groups tasks that Best Chat runs at select events.  These are all commands you were otherwise enter from the input box and can include those from plugins and aliases..
        /// </summary>
        internal static string strGlobalAutoPerformDesc {
            get {
                return ResourceManager.GetString("strGlobalAutoPerformDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto-perform.
        /// </summary>
        internal static string strGlobalAutoPerformTitle {
            get {
                return ResourceManager.GetString("strGlobalAutoPerformTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter commands to run when joining a channel on any network.  This might be overridden by the settings for each network and further by individual channels..
        /// </summary>
        internal static string strGlobalAutoPerformWhenJoiningChanDesc {
            get {
                return ResourceManager.GetString("strGlobalAutoPerformWhenJoiningChanDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When joining a channel on any network.
        /// </summary>
        internal static string strGlobalAutoPerformWhenJoiningChanTitle {
            get {
                return ResourceManager.GetString("strGlobalAutoPerformWhenJoiningChanTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter any commands to run when you join any network.  Thise can include commands from plugins and aliases..
        /// </summary>
        internal static string strGlobalAutoPerformWhenJoiningNetDesc {
            get {
                return ResourceManager.GetString("strGlobalAutoPerformWhenJoiningNetDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When joining a network.
        /// </summary>
        internal static string strGlobalAutoPerformWhenJoiningNetTitle {
            get {
                return ResourceManager.GetString("strGlobalAutoPerformWhenJoiningNetTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter commands to run when opening a user chat on any network.  This might be overridden by the settings for each network..
        /// </summary>
        internal static string strGlobalAutoPerformWhenOpeningUserChatDesc {
            get {
                return ResourceManager.GetString("strGlobalAutoPerformWhenOpeningUserChatDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When opening a user chat on any network.
        /// </summary>
        internal static string strGlobalAutoPerformWhenOpeningUserChatTitle {
            get {
                return ResourceManager.GetString("strGlobalAutoPerformWhenOpeningUserChatTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter any commands to run when Best Chat starts.  This can include plugins and aliases..
        /// </summary>
        internal static string strGlobalAutoPerformWhenStartingBestChatDesc {
            get {
                return ResourceManager.GetString("strGlobalAutoPerformWhenStartingBestChatDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When Starting Best Chat.
        /// </summary>
        internal static string strGlobalAutoPerformWhenStartingBestChatTitle {
            get {
                return ResourceManager.GetString("strGlobalAutoPerformWhenStartingBestChatTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DCC lets you bypass a server once you connected in order to talk to a specific user, send them files, or receive files from them.  Use this tab to control those settings..
        /// </summary>
        internal static string strGlobalDccDesc {
            get {
                return ResourceManager.GetString("strGlobalDccDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies where to save all files received via DCC.
        /// </summary>
        internal static string strGlobalDccDownloadsFolderDesc {
            get {
                return ResourceManager.GetString("strGlobalDccDownloadsFolderDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloads Folder.
        /// </summary>
        internal static string strGlobalDccDownloadsFolderTitle {
            get {
                return ResourceManager.GetString("strGlobalDccDownloadsFolderTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must check this to allow Best Chat to use DCC.  Otherwise, all DCC chats will be blocked and DCC won&apos;t appear in the menus..
        /// </summary>
        internal static string strGlobalDccEnabledDesc {
            get {
                return ResourceManager.GetString("strGlobalDccEnabledDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabled.
        /// </summary>
        internal static string strGlobalDccEnabledTitle {
            get {
                return ResourceManager.GetString("strGlobalDccEnabledTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If checked, Best Chat will ask the server for the IP address to use..
        /// </summary>
        internal static string strGlobalDccGetIpFromServerDesc {
            get {
                return ResourceManager.GetString("strGlobalDccGetIpFromServerDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get the local IP from the server.
        /// </summary>
        internal static string strGlobalDccGetIpFromServerTitle {
            get {
                return ResourceManager.GetString("strGlobalDccGetIpFromServerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DCC (Direct Client Chat).
        /// </summary>
        internal static string strGlobalDccTitle {
            get {
                return ResourceManager.GetString("strGlobalDccTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string strGlobalDesc {
            get {
                return ResourceManager.GetString("strGlobalDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter any strings you want to trigger a notify besides your nick.  This could be anything you&apos;re interested in, &quot;@op&quot;, &quot;@room&quot;, etc.  Your nick is implied.  If you turned on Agressive Notify in the application&apos;s main preferences, Best Chat will try to get your attention.
        /// </summary>
        internal static string strGlobalStalkWordsDesc {
            get {
                return ResourceManager.GetString("strGlobalStalkWordsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stalk Words.
        /// </summary>
        internal static string strGlobalStalkWordsTitle {
            get {
                return ResourceManager.GetString("strGlobalStalkWordsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string strGlobalTitle {
            get {
                return ResourceManager.GetString("strGlobalTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All IRC specific settings are here..
        /// </summary>
        internal static string strIrcRootDesc {
            get {
                return ResourceManager.GetString("strIrcRootDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IRC.
        /// </summary>
        internal static string strIRCRootTitle {
            get {
                return ResourceManager.GetString("strIRCRootTitle", resourceCulture);
            }
        }
    }
}
