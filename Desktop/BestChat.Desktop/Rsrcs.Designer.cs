//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BestChat.Desktop {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Rsrcs {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Rsrcs() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BestChat.Desktop.Rsrcs", typeof(Rsrcs).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to These fonts are used by the main window, the preference window, and anywhere else that isn&apos;t a view provided by a protocol..
        /// </summary>
        internal static string strGlboalAppearanceAppFontsDesc {
            get {
                return ResourceManager.GetString("strGlboalAppearanceAppFontsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fonts for the Application&apos;s main windows.
        /// </summary>
        internal static string strGlobalAppearanceAppFontsTitle {
            get {
                return ResourceManager.GetString("strGlobalAppearanceAppFontsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to These fonts are used only inside views provided by a protocol implementation.  Some may override or ignore these settings.  They may also add additional settings as some will support more format information..
        /// </summary>
        internal static string strGlobalAppearanceCLientFontsDesc {
            get {
                return ResourceManager.GetString("strGlobalAppearanceCLientFontsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fonts for views provided by a protocol..
        /// </summary>
        internal static string strGlobalAppearanceClientFontsTitle {
            get {
                return ResourceManager.GetString("strGlobalAppearanceClientFontsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Best Chat uses this font when it needs a fixed width font.  Note: Emoji characters may force Best Chat to switch to another font as most fonts don&apos;t include the emoji characters.  Furthermore, if you choose to use graphical emoji, those will almost certainly be a different width..
        /// </summary>
        internal static string strGlobalAppearanceFixedWidthFontFamilyDesc {
            get {
                return ResourceManager.GetString("strGlobalAppearanceFixedWidthFontFamilyDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fixed Width Font Family.
        /// </summary>
        internal static string strGlobalAppearanceFixedWidthFontFamilyTitle {
            get {
                return ResourceManager.GetString("strGlobalAppearanceFixedWidthFontFamilyTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check this to override the theme and uncheck it to allow the theme&apos;s selection to take affect..
        /// </summary>
        internal static string strGlobalAppearanceFontBlockPairIsOverriddenDesc {
            get {
                return ResourceManager.GetString("strGlobalAppearanceFontBlockPairIsOverriddenDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Is Overriden.
        /// </summary>
        internal static string strGlobalAppearanceFontBlockPairIsOverriddenTitle {
            get {
                return ResourceManager.GetString("strGlobalAppearanceFontBlockPairIsOverriddenTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string strGlobalAppearanceFontBlockPairOverriddenValDesc {
            get {
                return ResourceManager.GetString("strGlobalAppearanceFontBlockPairOverriddenValDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value you chose.
        /// </summary>
        internal static string strGlobalAppearanceFontBlockPairOverriddenValTitle {
            get {
                return ResourceManager.GetString("strGlobalAppearanceFontBlockPairOverriddenValTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your chosen theme specified a series of fonts to use.  However, you can override the font selections the application..
        /// </summary>
        internal static string strGlobalAppearanceFontDesc {
            get {
                return ResourceManager.GetString("strGlobalAppearanceFontDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the size of the font used.  This affects the size of both the normal and fixed width fonts you (or your theme) use..
        /// </summary>
        internal static string strGlobalAppearanceFontSizeDesc {
            get {
                return ResourceManager.GetString("strGlobalAppearanceFontSizeDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Size of the fonts used.
        /// </summary>
        internal static string strGlobalAppearanceFontSizeTitle {
            get {
                return ResourceManager.GetString("strGlobalAppearanceFontSizeTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fonts.
        /// </summary>
        internal static string strGlobalAppearanceFontTitle {
            get {
                return ResourceManager.GetString("strGlobalAppearanceFontTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the weight or boldness of the fonts used.  This affects the weight of both the normal and fixed width fonts.  Note: In your client views, you may find incoming posts causing text to be bolder than what you specifiy here..
        /// </summary>
        internal static string strGlobalAppearanceFontWeightDesc {
            get {
                return ResourceManager.GetString("strGlobalAppearanceFontWeightDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Weight (boldness) of the fonts used.
        /// </summary>
        internal static string strGlobalAppearanceFontWeightTitle {
            get {
                return ResourceManager.GetString("strGlobalAppearanceFontWeightTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is the font family used when Best Chat doesn&apos;t require a fixed width font..
        /// </summary>
        internal static string strGlobalAppearanceNormalFontFamilyDesc {
            get {
                return ResourceManager.GetString("strGlobalAppearanceNormalFontFamilyDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Normal Font Family.
        /// </summary>
        internal static string strGlobalAppearanceNormalFontFamilyTitle {
            get {
                return ResourceManager.GetString("strGlobalAppearanceNormalFontFamilyTitle", resourceCulture);
            }
        }
    }
}
